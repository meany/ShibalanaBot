// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dm.Shibalana.Data;

namespace dm.Shibalana.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211121154847_infos")]
    partial class infos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dm.Shibalana.Data.Models.AddressInfo", b =>
                {
                    b.Property<int>("AddressInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(20,9)");

                    b.Property<bool>("IsPartOfTeam")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressInfoId");

                    b.HasIndex("IsPartOfTeam");

                    b.ToTable("AddressInfos");

                    b.HasData(
                        new
                        {
                            AddressInfoId = 1,
                            Address = "2vQBVYD6fn1Z4iA2JWo3qY1tMBanspkHY4TfLe51hj9b",
                            Amount = 0m,
                            IsPartOfTeam = true,
                            Label = "Team"
                        },
                        new
                        {
                            AddressInfoId = 2,
                            Address = "Ewg558ARXCoEtCHeGmicUznRWvbae6eczGUFS1tkPBX8",
                            Amount = 0m,
                            IsPartOfTeam = true,
                            Label = "Staking"
                        },
                        new
                        {
                            AddressInfoId = 3,
                            Address = "A8GFDkvqg6WLGTsXksiabD3oKeB2aQXtNoG98R9Hr5QG",
                            Amount = 0m,
                            IsPartOfTeam = true,
                            Label = "Marketing"
                        },
                        new
                        {
                            AddressInfoId = 4,
                            Address = "9huAyo2PytpiqqNDvvd5tb2nQNXpjE6xKS81M4BdeVES",
                            Amount = 0m,
                            IsPartOfTeam = true,
                            Label = "Liquidity"
                        });
                });

            modelBuilder.Entity("dm.Shibalana.Data.Models.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CircMarketCapUSD")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FullMarketCapUSD")
                        .HasColumnType("decimal(16,8)");

                    b.Property<Guid>("Group")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MarketCapUSDChange")
                        .HasColumnType("int");

                    b.Property<decimal>("MarketCapUSDChangePct")
                        .HasColumnType("decimal(12,8)");

                    b.Property<decimal>("PriceSHIBAForOneUSDC")
                        .HasColumnType("decimal(16,8)");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("decimal(11,6)");

                    b.Property<decimal>("PriceUSDCForOneSHIBA")
                        .HasColumnType("decimal(16,8)");

                    b.Property<int>("PriceUSDChange")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceUSDChangePct")
                        .HasColumnType("decimal(12,8)");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<int>("VolumeUSD")
                        .HasColumnType("int");

                    b.Property<int>("VolumeUSDChange")
                        .HasColumnType("int");

                    b.Property<decimal>("VolumeUSDChangePct")
                        .HasColumnType("decimal(12,8)");

                    b.HasKey("PriceId");

                    b.HasIndex("Date");

                    b.HasIndex("Group");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("dm.Shibalana.Data.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscordChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("DiscordUserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DiscordUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRateLimited")
                        .HasColumnType("bit");

                    b.Property<int>("Response")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("Date");

                    b.HasIndex("Response", "Command");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("dm.Shibalana.Data.Models.Stat", b =>
                {
                    b.Property<int>("StatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Circulation")
                        .HasColumnType("decimal(20,9)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Group")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Holders")
                        .HasColumnType("int");

                    b.Property<decimal>("Supply")
                        .HasColumnType("decimal(20,9)");

                    b.HasKey("StatId");

                    b.HasIndex("Date");

                    b.ToTable("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
